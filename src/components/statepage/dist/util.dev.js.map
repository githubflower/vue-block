{"version":3,"sources":["util.js"],"names":["NAME_SPACE","SOUP","Util","isDefined","a","createEl","tagName","attrs","dom","document","createElementNS","key","setAttribute","createFieldDom","field","container","name","id","textContent","value","createCommentDom","comment","commentDom","pinned","createStateDefBlock","state","index","valueDom","stateDom","stateId","fieldDom","appendChild","createNextStatesDom","thread","nextDom","outputDom","outputAry","length","mutation","forEach","outputItem","outputStateDom","lineId","line","lineAry","find","item","stateAry","endState","state2dom","console","error","createNextStatesDom2","triggerEventDom","nextStatesDom","parentDom","triggerEventStatement","desc","genBlockType","type","ret","rootState","threadData","rootEl","log","stateType","fieldX","createThreadDefDom","threadProcedureId","threadDefDom","statementDom","procedureSelectBlockDom","fieldProcedureDom","createThreadProcedureDom","statesDom","threadProcedureDom","genUid","soupLength","i","charAt","Math","random","join","state2blockly","threadAry","statePageData","blocklyXml","firstState","listsDom","mutationDom","stateDefBlock","procedureDefId","x","y","outerHTML","blockly2state","copyBlocklyXml2Clipboard","hiddenInput","createElement","body","focus","select","execCommand","removeChild"],"mappings":"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","sourcesContent":["const NAME_SPACE = \"https://developers.google.com/blockly/xml\";\r\nconst SOUP = '!#$%()*+,-./:;=?@[]^_`{|}~ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n\r\n\r\nvar Util = {\r\n    isDefined(a){\r\n        return !((a === '') || (a === null) || (typeof a === 'undefined'));\r\n    },\r\n    createEl(tagName, attrs) {\r\n        var dom = document.createElementNS(NAME_SPACE, tagName);\r\n        if(typeof attrs === 'object'){\r\n            for(var key in attrs){\r\n                dom.setAttribute(key, attrs[key]);\r\n            }\r\n        }\r\n        return dom;\r\n    },\r\n    createFieldDom(field) {\r\n        let container = this.createEl(\"field\");\r\n        container.setAttribute(\"name\", field.name);\r\n        if (field.id){\r\n            container.setAttribute('id', field.id);\r\n        }\r\n        container.textContent = field.value;\r\n        return container;\r\n    },\r\n\r\n    createCommentDom(comment) {\r\n        let commentDom = this.createEl('comment');\r\n        commentDom.setAttribute('pinned', comment.pinned || false);\r\n        commentDom.textContent = comment.value;\r\n        return commentDom;\r\n    },\r\n\r\n    createStateDefBlock(state, index) {\r\n        var valueDom = this.createEl('value');\r\n        valueDom.setAttribute('name', 'ADD' + index);\r\n\r\n        var stateDom = this.createEl('block');\r\n        stateDom.setAttribute('type', 'state_def');\r\n        stateDom.setAttribute('id', state.stateId);\r\n        var fieldDom = this.createFieldDom({\r\n            name: 'NAME',\r\n            value: state.name\r\n        });\r\n        stateDom.appendChild(fieldDom);\r\n        \r\n        valueDom.appendChild(stateDom);\r\n        return valueDom;\r\n    },\r\n\r\n    createNextStatesDom(state, thread){\r\n        let nextDom, outputDom;\r\n\r\n        if (state.outputAry.length) {\r\n            nextDom = this.createEl(\"next\");\r\n            outputDom = this.createEl(\"block\");\r\n            outputDom.setAttribute(\"type\", \"controls_if\");\r\n            if (state.outputAry.length > 1) {\r\n                let mutation = this.createEl(\"mutation\");\r\n                mutation.setAttribute(\"elseif\", state.outputAry.length - 1);\r\n                outputDom.appendChild(mutation);\r\n            }\r\n            state.outputAry.forEach((outputItem, index) => {\r\n                let outputStateDom;\r\n                outputStateDom = this.createEl(\"statement\");\r\n                outputStateDom.setAttribute(\"name\", `DO${index}`);\r\n                outputStateDom.setAttribute(\"id\", `${outputItem.lineId}`);\r\n                //outputAry里面只存放了lineId 所以我们需要做以下事情：\r\n                //1 根据lineId找到对应的line数据\r\n                //2 根据line里面的endState的stateId找到对应的state数据\r\n                let line = thread.lineAry.find((item) => {\r\n                    return item.lineId === outputItem.lineId;\r\n                });\r\n                if (line) {\r\n                    let state = thread.stateAry.find((item) => {\r\n                        return item.stateId === line.endState.stateId;\r\n                    });\r\n                    if (state) {\r\n                        outputStateDom.appendChild(Util.state2dom(state, thread));\r\n                    } else {\r\n                        console.error(\"data error -^- \");\r\n                    }\r\n                }\r\n                if (outputStateDom) {\r\n                    outputDom.appendChild(outputStateDom);\r\n                }\r\n            });\r\n            nextDom.appendChild(outputDom);\r\n        }\r\n        return nextDom;\r\n    },\r\n\r\n    // 触发事件描述采用独立的结构\r\n    createNextStatesDom2(state, thread) {\r\n        let triggerEventDom;\r\n        let nextStatesDom;\r\n        if (state.outputAry.length) {\r\n            /* if (state.outputAry.length > 1) {\r\n                let mutation = this.createEl(\"mutation\");\r\n                mutation.setAttribute(\"elseif\", state.outputAry.length - 1);\r\n                triggerEventDom.appendChild(mutation);\r\n            } */\r\n            let parentDom;\r\n            \r\n            state.outputAry.forEach((outputItem, index) => {\r\n                let nextDom = this.createEl(\"next\");\r\n                if (!nextStatesDom){\r\n                    nextStatesDom = nextDom;\r\n                }\r\n                triggerEventDom = this.createEl(\"block\");\r\n                triggerEventDom.setAttribute(\"type\", \"state_trigger_event\");\r\n                triggerEventDom.setAttribute(\"id\", outputItem.lineId);\r\n\r\n                let triggerEventStatement;\r\n                triggerEventStatement = this.createEl(\"statement\");\r\n                triggerEventStatement.setAttribute(\"name\", `DO0`);\r\n                // triggerEventStatement.setAttribute(\"id\", `${outputItem.lineId}`);\r\n                //outputAry里面只存放了lineId 所以我们需要做以下事情：\r\n                //1 根据lineId找到对应的line数据\r\n                //2 根据line里面的endState的stateId找到对应的state数据\r\n                let line = thread.lineAry.find((item) => {\r\n                    return item.lineId === outputItem.lineId;\r\n                });\r\n                if (line) {\r\n                    if (line.desc){\r\n                        let commentDom = this.createCommentDom({\r\n                            value: line.desc\r\n                        });\r\n                        triggerEventDom.appendChild(commentDom);\r\n                    }\r\n                    let state = thread.stateAry.find((item) => {\r\n                        return item.stateId === line.endState.stateId;\r\n                    });\r\n                    if (state) {\r\n                        triggerEventStatement.appendChild(Util.state2dom(state, thread));\r\n                    } else {\r\n                        console.error(\"data error -^- \");\r\n                    }\r\n                }\r\n                if (triggerEventStatement) {\r\n                    triggerEventDom.appendChild(triggerEventStatement);\r\n                }\r\n                nextDom.appendChild(triggerEventDom);\r\n                if (parentDom){\r\n                    parentDom.appendChild(nextDom);\r\n                }\r\n                parentDom = triggerEventDom;\r\n                \r\n            });\r\n        }\r\n        return nextStatesDom;\r\n    },\r\n\r\n    genBlockType(type) {\r\n        let ret = \"state_opr\";\r\n        if (type === \"loopDiv\") {\r\n            ret = \"controls_whileUntil\";\r\n        }\r\n        return ret;\r\n    },\r\n\r\n    state2dom(rootState, threadData){\r\n        let rootEl = this.createEl(\"block\");\r\n        console.log(\r\n            rootState.stateId +\r\n            \" --- \" +\r\n            rootState.name +\r\n            \" --- \" +\r\n            rootState.stateType\r\n        );\r\n        rootEl.setAttribute(\"id\", rootState.stateId);\r\n        // rootEl.setAttribute('type', rootState.type || 'state_run');\r\n        rootEl.setAttribute(\"type\", this.genBlockType(rootState.stateType));\r\n        rootEl.setAttribute(\"SX\", 9999);\r\n        \r\n        let fieldDom = this.createFieldDom({\r\n            id: rootState.stateId,\r\n            name: \"field_state\",\r\n            value: rootState.name,\r\n        });\r\n        rootEl.appendChild(fieldDom);\r\n\r\n        let fieldX = this.createFieldDom({\r\n            id: rootState.stateId,\r\n            name: \"SX_FIELD\",\r\n            value: 8888//rootState.x,\r\n        });\r\n        rootEl.appendChild(fieldX);\r\n\r\n        let nextStatesDom = this.createNextStatesDom2(rootState, threadData);\r\n        if (nextStatesDom) {\r\n            rootEl.appendChild(nextStatesDom);\r\n        }\r\n        return rootEl;\r\n    },\r\n\r\n    createThreadDefDom(thread, threadProcedureId){\r\n        /* <block type=\"thread_def\" id=\"ISJ:}kp8l):hy~wr5{x5\" x=\"-187\" y=\"-87\">\r\n            <field name=\"NAME\">thread</field>\r\n            <statement name=\"CALLBACK\">\r\n                <block type=\"procedure_select\" id=\"IK`|)2n6nVKsvFJ4VlXC\">\r\n                    <field name=\"field_procedure\" id=\"aewyJ+/)D`VHlrJ$BgFT\">thread_p</field>\r\n                </block>\r\n            </statement>\r\n        </block> */\r\n        // const procedureDefId = this.genUid();\r\n        let threadDefDom = this.createEl('block', {\r\n            type: \"thread_def\"\r\n        });\r\n        let fieldDom = this.createEl('field', {\r\n            name: 'NAME',\r\n            textContent: thread.name\r\n        });\r\n        fieldDom.textContent = thread.name;\r\n\r\n        let statementDom = this.createEl('statement', {\r\n            name: 'CALLBACK'\r\n        });\r\n        let procedureSelectBlockDom = this.createEl('block', {\r\n            type: 'procedure_select'\r\n        });\r\n        let fieldProcedureDom = this.createEl('field', {\r\n            name: 'field_procedure',\r\n            id: threadProcedureId,\r\n        });\r\n        fieldProcedureDom.textContent = thread.name + \"_function\";\r\n        procedureSelectBlockDom.appendChild(fieldProcedureDom);\r\n        statementDom.appendChild(procedureSelectBlockDom);\r\n        threadDefDom.appendChild(fieldDom);\r\n        threadDefDom.appendChild(statementDom);\r\n\r\n        return threadDefDom;\r\n    },\r\n\r\n    createThreadProcedureDom(thread, threadProcedureId, statesDom){\r\n        console.log('---thread.name---' + thread.name);\r\n        /* <block type=\"procedures_defnoreturn\" id=\"aewyJ+/)D`VHlrJ$BgFT\" x=\"463\" y=\"-113\">\r\n            <field name=\"NAME\">thread_p</field>\r\n            <comment pinned=\"false\" h=\"80\" w=\"160\">Describe this function...</comment>\r\n            <statement name=\"STACK\">\r\n            </statement>\r\n        </block> */\r\n        let threadProcedureDom = this.createEl('block', {\r\n            type: 'procedures_defnoreturn',\r\n            id: threadProcedureId\r\n        });\r\n        let fieldDom = this.createEl('field', {\r\n            name: 'NAME',\r\n            \r\n        });\r\n        fieldDom.textContent= thread.name + \"_function\";\r\n        let statementDom = this.createEl('statement', {\r\n            name: 'STACK'\r\n        });\r\n        statementDom.appendChild(statesDom);\r\n        threadProcedureDom.appendChild(fieldDom);\r\n        threadProcedureDom.appendChild(statementDom);\r\n        return threadProcedureDom;\r\n    },\r\n\r\n    genUid() {\r\n        var length = 20;\r\n        var soupLength = SOUP.length;\r\n        var id = [];\r\n        for (var i = 0; i < length; i++) {\r\n            id[i] = SOUP.charAt(Math.random() * soupLength);\r\n        }\r\n        return id.join('');\r\n    },\r\n\r\n    state2blockly(threadAry) {\r\n        /**\r\n         * 1.找到线程中有开始标记的根状态\r\n         * 2.遍历根状态的output，生成特殊的if-else if 结构，注意：默认不采用else\r\n         *\r\n         */\r\n        let statePageData = threadAry;\r\n\r\n        let blocklyXml = Util.createEl(\"xml\");\r\n        blocklyXml.setAttribute(\r\n            \"xmlns\",\r\n            \"https://developers.google.com/blockly/xml\"\r\n        );\r\n\r\n        statePageData.forEach((thread, index) => {\r\n            let firstState = thread.stateAry[0];\r\n            let listsDom = Util.createEl('block');\r\n            listsDom.setAttribute('type', 'lists_state');\r\n            listsDom.setAttribute('x', 300 + (700 * index));\r\n            listsDom.setAttribute('y', 150);\r\n\r\n            let mutationDom = Util.createEl('mutation');\r\n            mutationDom.setAttribute('items', thread.stateAry.length);\r\n            listsDom.appendChild(mutationDom);\r\n\r\n            thread.stateAry.forEach((state, i) => {\r\n                let stateDefBlock = Util.createStateDefBlock(state, i);\r\n                listsDom.appendChild(stateDefBlock);\r\n                // blocklyXml.appendChild(stateDefBlock);\r\n            })\r\n            var statesDom = Util.state2dom(firstState, thread);\r\n            const procedureDefId = Util.genUid();\r\n            let threadDefDom = Util.createThreadDefDom(thread, procedureDefId);\r\n            let threadProcedureDom = Util.createThreadProcedureDom(thread, procedureDefId, statesDom);\r\n            if (Util.isDefined(thread.x)) {\r\n                threadDefDom.setAttribute('x', thread.x);\r\n            } else {\r\n                threadDefDom.setAttribute('x', index * 700);\r\n            }\r\n            if (Util.isDefined(thread.y)) {\r\n                threadDefDom.setAttribute('y', thread.y);\r\n            } else {\r\n                threadDefDom.setAttribute('y', 10);\r\n            }\r\n            threadProcedureDom.setAttribute('x', index * 700);\r\n            threadProcedureDom.setAttribute('y', 200);\r\n            //这个添加的顺序很重要！！！\r\n            blocklyXml.appendChild(listsDom);\r\n            blocklyXml.appendChild(threadProcedureDom);\r\n            blocklyXml.appendChild(threadDefDom);\r\n        });\r\n\r\n        return blocklyXml.outerHTML;\r\n    },\r\n\r\n    blockly2state(){\r\n\r\n    },\r\n\r\n    copyBlocklyXml2Clipboard(blocklyXml){\r\n        // window.stateDataXml = blocklyXml.outerHTML;\r\n        let hiddenInput = document.createElement(\"input\");\r\n        hiddenInput.setAttribute(\"type\", \"text\");\r\n        hiddenInput.setAttribute(\"value\", blocklyXml);\r\n        hiddenInput.setAttribute(\"style\", \"height: 0; overflow: hidden;\");\r\n        document.body.appendChild(hiddenInput);\r\n        hiddenInput.focus();\r\n        hiddenInput.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(hiddenInput);\r\n    }\r\n\r\n}\r\nexport default Util;"],"file":"util.dev.js"}