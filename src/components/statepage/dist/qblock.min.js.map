{"version":3,"sources":["qblock.js"],"names":["_util","_interopRequireDefault","require","QBlock","store","window","Thread","State","state","threadIndex","document","getElementsByClassName","getBoundingClientRect","statePos","Util","getDomByStateId","stateId","x","left","threadPos","y","top","getXY2Canvas","getStateWidth","translatePX2Num","width","getStartPoint","line","getStateHeight","startPoint","startState","getState","getEndPoint","endPoint","endState","xy","height"],"mappings":"2FAAA,IAAAA,MAAAC,uBAAAC,QAAA,sFACA,IAAIC,OAAS,CACTC,MAAOC,OAAOD,MACdE,OAAQ,GAGRC,MAAO,CALPJ,aAKO,SALEK,EAAAC,GACFJ,IAAOD,EADLM,SAAAC,uBAAA,UAAAF,GAAAG,wBAAAC,EAAAC,MAAAA,QAAAC,gBAAAP,EAAAQ,SAAAJ,wBAKF,MAAA,CACHK,EAAAJ,EAAAK,KAAAC,EAAAD,KASQE,EAAGP,EAASQ,IAAMF,EAAUE,MALpCC,eALG,SAAAd,GAMKW,OAASL,MAAAA,QAAGJ,gBAASC,EAAAA,SACzBY,cAPD,SAOgBT,GAUf,OAAOA,MAAAA,QAAKU,gBAAgBhB,EAAMiB,SAP9BL,KAAC,CAFLM,cAEK,SAFLC,EAAAlB,GARD,IAaHmB,EAbGC,YAcaL,OAALV,EAAAA,WAAKU,QAdb,IAAAG,EAAAE,WAAAZ,GAgBHM,MAhBGI,EAAAE,WAAAZ,GAiBQH,CACV,IAAAgB,EAAA1B,MAAA2B,SAAAtB,EAAAkB,EAAAG,WAAAd,SAAA,GAvBIW,EAAAE,WAAA,CAyBHZ,EAAAa,EAAAb,EAAAH,MAAAA,QACYa,gBADZG,EAC8BL,OAElBI,EAAAA,EACFT,EAACS,MAAAA,QAAAA,gBADLC,EAEOH,QAAKE,GAGZ,OAAAF,EAAAE,YAEIG,YApBH,SAoBGL,EAAAlB,GAEC,IAHLkB,EAAAM,UAKH,OAAAN,EAAAM,SAAAhB,QAQ8B,IAApBU,EAAKM,SAAShB,GAPlBU,MAAKE,EAAAA,SAAZZ,GAfF,CAAA,IAAAiB,EAAA9B,MAAA2B,SAiBgBtB,EAAakB,EAAAO,SAAAlB,SAAA,GAC3BmB,EAAAhC,OAAAI,MAAAe,aAAAY,EAAAzB,GAQUkB,EAAGxB,SAAamB,CACtBL,EAAAkB,EAAAlB,EAOIG,EAAGe,EAAGf,EAAIN,MAAAA,QAAKU,gBAAgBU,EAASE,QAAU,GAG1D,IAAIF,EAAW9B,MAAM2B,SAAStB,EAAakB,EAAKO,SAASlB,SAAS,GAC9DmB,EAAKhC,OAAOI,MAAMe,aAAaY,EAAUzB,GAD7C,OADCkB,EAAAM,SAAA,CASGhB,EAAGkB,EAAGlB,EARNiB,EAAQC,EAAG/B,EAAKU,MAAAA,QAACiB,gBAANG,EAAiCA,QAASlB,GAAzDW,EAAAM,qBAeG9B","file":"qblock.min.js","sourcesContent":["import Util from './util.js'\r\nvar QBlock = {\r\n    store: window.store,\r\n    Thread: {\r\n\r\n    },\r\n    State: {\r\n        /**\r\n         * 获取状态相对于线程框的坐标信息\r\n         * @param {*} state\r\n         */\r\n        getXY2Canvas(state, threadIndex){\r\n            let threadPos = document.getElementsByClassName(\"thread\")[threadIndex].getBoundingClientRect();\r\n            let statePos = Util.getDomByStateId(state.stateId).getBoundingClientRect();\r\n            return {\r\n                x: statePos.left - threadPos.left,\r\n                y: statePos.top - threadPos.top\r\n            }\r\n        },\r\n        getStateHeight(state){\r\n            return Util.translatePX2Num(state.height);\r\n        },\r\n        getStateWidth(state){\r\n            return Util.translatePX2Num(state.width);\r\n        }\r\n    },\r\n    Line: {\r\n        getStartPoint(line, threadIndex){\r\n            if (\r\n                !line.startPoint ||\r\n                line.startPoint.x === null ||\r\n                typeof line.startPoint.x === \"undefined\" ||\r\n                isNaN(line.startPoint.x)\r\n            ) {\r\n                let startState = store.getState(threadIndex, line.startState.stateId, false/**isThreadId: false */);\r\n                line.startPoint = {\r\n                    //TODO 需改用getXY2Canvas更准确\r\n                    x: startState.x + Util.translatePX2Num(startState.width),\r\n                    y: startState.y + Util.translatePX2Num(startState.height) / 2,\r\n                };\r\n            }\r\n            return line.startPoint;\r\n        },\r\n        getEndPoint(line, threadIndex) {\r\n            //如果结束点不存在\r\n            if (\r\n                !line.endPoint ||\r\n                line.endPoint.x === null ||\r\n                typeof line.endPoint.x === \"undefined\" ||\r\n                isNaN(line.endPoint.x)\r\n            ) {\r\n                let endState = store.getState(threadIndex, line.endState.stateId, false/**isThreadId: false */);\r\n                let xy = QBlock.State.getXY2Canvas(endState, threadIndex);\r\n                /* line.endPoint = {\r\n                    //TODO 需改用getXY2Canvas更准确\r\n                    x: endState.x,\r\n                    y: endState.y + Util.translatePX2Num(endState.height) / 2,\r\n                }; */\r\n                line.endPoint = {\r\n                    x: xy.x,\r\n                    y: xy.y + Util.translatePX2Num(endState.height) / 2,\r\n                };\r\n            }\r\n            let endState = store.getState(threadIndex, line.endState.stateId, false/**isThreadId: false */);\r\n            let xy = QBlock.State.getXY2Canvas(endState, threadIndex);\r\n            /* line.endPoint = {\r\n                //TODO 需改用getXY2Canvas更准确\r\n                x: endState.x,\r\n                y: endState.y + Util.translatePX2Num(endState.height) / 2,\r\n            }; */\r\n            line.endPoint = {\r\n                x: xy.x,\r\n                y: xy.y + Util.translatePX2Num(endState.height) / 2,\r\n            };\r\n            return line.endPoint;\r\n        },\r\n    }\r\n}\r\nexport default QBlock;"]}