{"version":3,"sources":["main.js"],"names":["Vue","use","Element","size","zIndex","prototype","axios","config","productionTip","window","stateManage","genId","_id","type","Date","store","debug","statenameIndex","stateData","threadAry","name","width","height","stateAry","lineAry","demoStateData","addThread","obj","push","getDefaultStateCfg","data","stateType","stateId","inputAry","outputAry","parent","mode","x","y","children","addState","state","index","addLine","threadIndex","lineData","relateLine2startState","relateLine2endState","deleteLine","lineItem","line","i","length","lineId","splice","startState","find","item","forEach","endState","result","traverse","stateIndex","resizeThread","dh","dw","router","beforeEach","to","from","next","console","log","EventObj","el","components","App","template"],"mappings":"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","sourcesContent":["// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport Vue from 'vue'\r\nimport App from './App'\r\nimport router from './router'\r\nimport Element from 'element-ui';\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\nimport axios from 'axios';\r\n\r\nVue.use(Element, { size: 'small', zIndex: 3000 });\r\nVue.prototype.axios = axios;\r\n\r\nVue.config.productionTip = false\r\n\r\nwindow.stateManage = {};//状态管理  后续采用vuex实现 TODO\r\nwindow.genId = (function () {\r\n  var _id = 0;\r\n  return function (type) {\r\n    return type + '-' + +new Date();//+ ++_id\r\n  }\r\n})();\r\n\r\nwindow.store = {\r\n  debug: true,\r\n  statenameIndex: 0,\r\n  stateData: {\r\n    threadAry: [\r\n      {\r\n        name: \"线程1\",\r\n        width: 1200,\r\n        height: 500,\r\n        stateAry: [],\r\n        lineAry: [],\r\n      },\r\n    ],\r\n  //用于DEMO\r\n  demoStateData: {}\r\n  },\r\n  addThread(obj) {\r\n    this.stateData.threadAry.push(obj);\r\n  },\r\n  /**\r\n  * 获取状态组件的默认配置\r\n  * @param {index: this.threadIndex, x: e.x - threadPosInfo.x, y: e.y - threadPosInfo.y, stateType: e.dataTransfer.getData(\"stateType\")} data\r\n  */\r\n  getDefaultStateCfg(data) {\r\n    return {\r\n      width: data.stateType === \"loopDiv\" ? \"300px\" : \"76px\",\r\n      height: data.stateType === \"loopDiv\" ? \"120px\" : \"40px\",\r\n      name: \"状态描述\" + this.statenameIndex++,\r\n      stateType: data.stateType,\r\n      stateId: window.genId(\"state\"),\r\n      inputAry: [],\r\n      outputAry: [],\r\n      parent: null,\r\n      mode:'normal',\r\n      x: data.x,\r\n      y: data.y,\r\n      children:[],\r\n    }\r\n  },\r\n  addState(data) {\r\n    let state = this.getDefaultStateCfg(data);\r\n    this.stateData.threadAry[data.index].stateAry.push(state);\r\n  },\r\n  /**\r\n   * 在线程框内增加连线\r\n   * @param { threadIndex, lineData }data\r\n   */\r\n  addLine(data) {\r\n    this.stateData.threadAry[data.threadIndex].lineAry.push(data.lineData);\r\n    //将连线数据添加到首尾2个状态块\r\n    this.relateLine2startState(data);\r\n    this.relateLine2endState(data);\r\n  },\r\n  /**\r\n   * 删除连线 \r\n   * 参数：连线id， 线程索引（TODO:后续考虑修改为线程id）\r\n   * @param {lineId, threadIndex} data\r\n   */\r\n  deleteLine(data) {\r\n    let lineAry = this.stateData.threadAry[data.threadIndex].lineAry,\r\n      lineItem,\r\n      line,\r\n      i;\r\n    for (i = 0; i < lineAry.length; i++) {\r\n      lineItem = lineAry[i];\r\n      if (lineItem.lineId === data.lineId) {\r\n        line = lineAry.splice(i, 1)[0];\r\n        break;\r\n      }\r\n    }\r\n    //更新这条线的始末状态的outputAry inputAry信息\r\n    let stateAry = this.stateData.threadAry[data.threadIndex].stateAry;\r\n    let startState = stateAry.find((item) => {\r\n      return item.stateId === line.startState.stateId;\r\n    });\r\n    let outputAry = startState.outputAry;\r\n    outputAry.forEach((item, index) => {\r\n      if (item.lineId === line.lineId) {\r\n        outputAry.splice(index, 1);\r\n        return false;\r\n      }\r\n    });\r\n\r\n    let endState = stateAry.find((item) => {\r\n      return item.stateId === line.endState.stateId;\r\n    });\r\n    let inputAry = endState.inputAry;\r\n    inputAry.forEach((item, index) => {\r\n      if (item.lineId === line.lineId) {\r\n        inputAry.splice(index, 1);\r\n        return false;\r\n      }\r\n    });\r\n  },\r\n  /**\r\n   * 将连线数据和连线的首尾2个状态关联\r\n   * @param  { threadIndex, lineData }data\r\n   */\r\n\r\n  relateLine2startState(data) {\r\n    let result = []\r\n    // 用于深度搜索stateId的方法，寻找到的state存储在result内\r\n    function traverse(stateAry) {\r\n      for (var i in stateAry){\r\n        if (stateAry[i].stateId === data.lineData.startState.stateId){\r\n          result.push(stateAry[i]);\r\n          return\r\n        }\r\n        traverse(stateAry[i].children);\r\n      }\r\n    };\r\n\r\n    if (data.lineData.startState) {\r\n      traverse(this.stateData.threadAry[data.threadIndex].stateAry)\r\n      let outputAry = result[0].outputAry;\r\n      if (!outputAry) {\r\n        outputAry = [];\r\n        result[0].outputAry = outputAry;\r\n      }\r\n      outputAry.push({\r\n        lineId: data.lineData.lineId, //这里只存放连线的lineId，对连线的具体数据只保存一份，放在thread.lineAry里面，避免维护多份数据\r\n      });\r\n    }\r\n  },\r\n  /**\r\n   * \r\n   * \r\n   * \r\n   */\r\n  relateLine2endState(data) {\r\n    if (\r\n      data.lineData.endState &&\r\n      data.lineData.endState.stateIndex !== null\r\n    ) {\r\n      // 根据id来拿\r\n      let result = []\r\n      // 用于深度搜索stateId的方法，寻找到的state存储在result内\r\n      function traverse(stateAry) {\r\n        for (var i in stateAry){\r\n          if (stateAry[i].stateId === data.lineData.endState.stateId){\r\n            result.push(stateAry[i]);\r\n            return\r\n          }\r\n          traverse(stateAry[i].children);\r\n        }\r\n      };\r\n      traverse(this.stateData.threadAry[data.threadIndex].stateAry)\r\n      let inputAry = result[0].inputAry;\r\n      \r\n      if (!inputAry) {\r\n        inputAry = [];\r\n        result[0].inputAry = inputAry;\r\n      }\r\n      inputAry.push({\r\n        lineId: data.lineData.lineId,\r\n      });\r\n    }\r\n  },\r\n  /**\r\n   * 调整线程框的宽高\r\n   * @param {dw, dh} data \r\n   */\r\n  resizeThread(data) {\r\n    if (data.dh) {\r\n      this.stateData.threadAry[data.threadIndex].height += data.dh;\r\n    }\r\n    if (data.dw) {\r\n      this.stateData.threadAry[data.threadIndex].width += data.dw;\r\n    }\r\n  },\r\n}\r\n\r\nrouter.beforeEach((to, from, next)=>{\r\n  console.log(to);\r\n  if ((from.name === 'blockly' && to.name === 'state') || (to.name === 'blockly' && from.name === 'state')){\r\n    console.log('同步数据... '); //TODO\r\n  }\r\n  next();\r\n})\r\n/* eslint-disable no-new */\r\nwindow.EventObj = new Vue();\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  components: { App },\r\n  template: '<App/>'\r\n})\r\n"],"file":"main.dev.js"}